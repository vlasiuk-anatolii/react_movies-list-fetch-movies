{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","json","FindMovie","addMovies","useState","setMovie","query","setQuery","error","setError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","disabled","onClick","then","movieFromServer","Error","App","setMovies","useCallback","find","state","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+BCbRC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACCC,MAAM,GAAD,OAHb,2CAGa,cAAkBF,IADxB,cAChBG,EADgB,yBAGfA,EAASC,QAHM,2CAAH,sDCORC,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,EAA0BC,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcoB,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAgCA,OACE,qCACE,uBACEvB,UAAU,aACVwB,SAfa,SAACC,GAClBA,EAAMC,iBACF3B,IACFkB,EAAUlB,GACVsB,EAAS,IACTF,EAAS,OAGXI,GAAS,IAKP,UAIE,sBAAKvB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,yBAIA,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAWsB,EAAQ,kBAAoB,QACvCS,MAAOX,EACPY,SApCQ,SAACP,GACnB,IAAQM,EAAUN,EAAMQ,OAAhBF,MAERV,EAASU,GACTR,GAAS,QAoCFD,GACC,mBAAGtB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACVkC,UAAWd,EACXe,QAjEM,WAChBzB,EAASU,GACNgB,MAAK,SAAAC,GAC0B,qBAA1BA,EAAgBC,OAClBf,GAAS,GACTJ,EAAS,OAETA,EAASkB,OA2DL,UAAQ,OALV,4BAWF,qBAAKrC,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,oBACV,UAAQ,MACRkC,SAAUZ,EACVa,QAAS,WACFf,GACHG,GAAS,IAPf,qCAiBN,sBAAKvB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,WCrGvBwC,EAAgB,WAC3B,MAA4BrB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAeiC,EAAf,KACMvB,EAAYwB,uBAAY,SAAC1C,GACXQ,EAAOmC,MAAK,qBAAGjC,SAAwBV,EAAMU,WAG7D+B,GAAU,SAACG,GAAD,4BAAeA,GAAf,CAAsB5C,SAEjC,CAACQ,IAEJ,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,UAAWA,UCjB9B2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.92d0b291.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=257b4347';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${BASE_URL}&t=${title}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addMovies: (film: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n\n  const loadMovie = () => {\n    getMovie(query)\n      .then(movieFromServer => {\n        if (movieFromServer.Error === 'Movie not found!') {\n          setError(true);\n          setMovie(null);\n        } else {\n          setMovie(movieFromServer);\n        }\n      });\n  };\n\n  const changeQuery = (event: { target: { value: string; }; }) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setError(false);\n  };\n\n  const submitForm = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    if (movie) {\n      addMovies(movie);\n      setQuery('');\n      setMovie(null);\n    }\n\n    setError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={error ? 'is-danger input' : 'input'}\n              value={query}\n              onChange={changeQuery}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              disabled={!query}\n              onClick={loadMovie}\n              data-cy=\"find\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              data-cy=\"add\"\n              disabled={error}\n              onClick={() => {\n                if (!query) {\n                  setError(true);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const addMovies = useCallback((movie: Movie) => {\n    const duplicate = movies.find(({ imdbID }) => imdbID === movie.imdbID);\n\n    if (!duplicate) {\n      setMovies((state) => [...state, movie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovies={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}